// <auto-generated />
using System;
using EfCoreSinema.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfCoreSinema.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Film", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("08624742-225c-4f55-8e0a-bc243597c10b"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FilmAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short?>("FilmSuresi")
                        .HasColumnType("smallint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Filmler");
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Gosterim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("34bee920-7dd6-4716-99ad-2729efad2a22"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("FilmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HaftaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SeansId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("HaftaId");

                    b.HasIndex("SalonId");

                    b.HasIndex("SeansId");

                    b.ToTable("Gosterimler");
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Hafta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("6ef82dde-a1a7-45de-84fd-15f75861d378"));

                    b.Property<DateTime?>("Baslangic")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Bitis")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HaftaAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Haftalar");
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Kategori", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("83103158-ce85-40e2-8cff-a55a83ecef70"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("KategoriAdi")
                        .IsUnique();

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Salon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("3e4bfac8-8966-426c-9dc5-6d0eae70b151"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<byte?>("Kapasite")
                        .HasColumnType("tinyint");

                    b.Property<string>("SalonAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Salonlar");
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Seans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("122891d8-ea49-4543-b3cc-c97cb3c509fc"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SeansAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Seanslar");
                });

            modelBuilder.Entity("FilmKategori", b =>
                {
                    b.Property<Guid>("FilmlerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KategorilerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FilmlerId", "KategorilerId");

                    b.HasIndex("KategorilerId");

                    b.ToTable("FilmKategori");
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Gosterim", b =>
                {
                    b.HasOne("EfCoreSinema.Entities.Concrete.Film", "Film")
                        .WithMany("Gosterimleri")
                        .HasForeignKey("FilmId");

                    b.HasOne("EfCoreSinema.Entities.Concrete.Hafta", "Hafta")
                        .WithMany("Gosterimler")
                        .HasForeignKey("HaftaId");

                    b.HasOne("EfCoreSinema.Entities.Concrete.Salon", "Salon")
                        .WithMany("Gosterimler")
                        .HasForeignKey("SalonId");

                    b.HasOne("EfCoreSinema.Entities.Concrete.Seans", "Seans")
                        .WithMany("Gosterimler")
                        .HasForeignKey("SeansId");

                    b.Navigation("Film");

                    b.Navigation("Hafta");

                    b.Navigation("Salon");

                    b.Navigation("Seans");
                });

            modelBuilder.Entity("FilmKategori", b =>
                {
                    b.HasOne("EfCoreSinema.Entities.Concrete.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCoreSinema.Entities.Concrete.Kategori", null)
                        .WithMany()
                        .HasForeignKey("KategorilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Film", b =>
                {
                    b.Navigation("Gosterimleri");
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Hafta", b =>
                {
                    b.Navigation("Gosterimler");
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Salon", b =>
                {
                    b.Navigation("Gosterimler");
                });

            modelBuilder.Entity("EfCoreSinema.Entities.Concrete.Seans", b =>
                {
                    b.Navigation("Gosterimler");
                });
#pragma warning restore 612, 618
        }
    }
}
