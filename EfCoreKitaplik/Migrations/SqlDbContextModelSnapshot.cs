// <auto-generated />
using System;
using EfCoreKitaplik.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfCoreKitaplik.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("EfCoreKitaplik.Entities.Concrete.Adres", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cadde")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KapiNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostaKodu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sehir")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sokak")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("YazarId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("YazarId")
                        .IsUnique();

                    b.ToTable("Adresler");
                });

            modelBuilder.Entity("EfCoreKitaplik.Entities.Concrete.Kitap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BaskiTarihi")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KitapAdi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Kitaplar");
                });

            modelBuilder.Entity("EfCoreKitaplik.Entities.Concrete.Yazar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Cinsiyet")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Yazarlar");
                });

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.Property<Guid>("KitaplarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("YazarlarId")
                        .HasColumnType("TEXT");

                    b.HasKey("KitaplarId", "YazarlarId");

                    b.HasIndex("YazarlarId");

                    b.ToTable("KitapYazar");
                });

            modelBuilder.Entity("EfCoreKitaplik.Entities.Concrete.Adres", b =>
                {
                    b.HasOne("EfCoreKitaplik.Entities.Concrete.Yazar", "Yazar")
                        .WithOne("Adres")
                        .HasForeignKey("EfCoreKitaplik.Entities.Concrete.Adres", "YazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.HasOne("EfCoreKitaplik.Entities.Concrete.Kitap", null)
                        .WithMany()
                        .HasForeignKey("KitaplarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCoreKitaplik.Entities.Concrete.Yazar", null)
                        .WithMany()
                        .HasForeignKey("YazarlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfCoreKitaplik.Entities.Concrete.Yazar", b =>
                {
                    b.Navigation("Adres")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
